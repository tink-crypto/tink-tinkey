"""Tink Tinkey module."""

module(
    name = "tink_tinkey",
    version = "1.12.0",
)

bazel_dep(
    name = "platforms",
    version = "0.0.10",
)
bazel_dep(
    name = "bazel_skylib",
    version = "1.7.1",
)
bazel_dep(
    name = "rules_java",
    version = "7.6.5",
)
bazel_dep(
    name = "rules_jvm_external",
    version = "6.1",
)

# Overriding to a commit that doesn't check for Java version. This is to avoid version parsing [1]
# which may fail [2]. Note that since [1] rules_jvm_external requires Java 11.
#
# [1] https://github.com/bazelbuild/rules_jvm_external/commit/4f56f7cec2fa3a47e34d48b8f6293785cfad7e3a
# [2] https://github.com/bazelbuild/rules_jvm_external/issues/1115
# Commit from Apr 29, 2024.
git_override(
    module_name = "rules_jvm_external",
    commit = "4f56f7cec2fa3a47e34d48b8f6293785cfad7e3a",
    remote = "https://github.com/bazelbuild/rules_jvm_external",
)

# This is needed to overwrite rules_jvm_external's toolchain to allow running with `root` as user.
bazel_dep(
    name = "rules_python",
    version = "0.33.2",
)

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    configure_coverage_tool = True,
    ignore_root_user_error = True,
    # Only set when you have mulitple toolchain versions.
    is_default = True,
    python_version = "3.11",
)

maven = use_extension("@rules_jvm_external//:extensions.bzl", "maven")
maven.install(
    artifacts = [
        "args4j:args4j:2.33",
        "com.google.auto.service:auto-service-annotations:1.1.1",
        "com.google.auto.service:auto-service:1.1.1",
        "com.google.auto:auto-common:1.2.2",
        "com.google.crypto.tink:tink-awskms:1.11.0",
        "com.google.crypto.tink:tink-gcpkms:1.10.0",
        "com.google.crypto.tink:tink:1.18.0",
        "com.google.truth:truth:1.1.5",
        "junit:junit:4.13.2",
    ],
    repositories = ["https://repo1.maven.org/maven2"],
)
use_repo(maven, "maven")
